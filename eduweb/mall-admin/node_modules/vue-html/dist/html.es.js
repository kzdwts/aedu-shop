var n={},e=JSON.stringify;var t=function(n){for(var t,c,i,r,s,a=0,u="return ",o="",f="",h=0,l="",g="",v="",O=0,$=function(){i?9===a?(h++&&(u+=","),u+="h("+(f||e(o)),a=0):13===a||0===a&&"..."===o?(0===a?(v||(v=")",l=l?"Object.assign("+l:"Object.assign({}"),l+=g+","+f,g=""):r&&(l+=l?","+(g?"":"{"):"{",g="}",l+=e(r)+":",l+=f||(s||o)&&e(o)||"true",r=""),s=!1):0===a&&(a=13,r=o,o=f="",$(),a=0):(f||(o=o.replace(/^\s*\n\s*|\s*\n\s*$/g,"")))&&(h++&&(u+=","),u+=f||e(o)),o=f="";},b=0;b<n.length;b++){b>0&&(i||$(),f="$["+b+"]",$());for(var d=0;d<n[b].length;d++){if(c=n[b].charCodeAt(d),i){if(39===c||34===c){if(O===c){O=0;continue}if(0===O){O=c;continue}}if(0===O)switch(c){case 62:$(),47!==a&&(u+=l?","+l+g+v:",null"),t&&(u+=")"),i=0,l="",a=1;continue;case 61:a=13,s=!0,r=o,o="";continue;case 47:t||(t=!0,9!==a||o.trim()||(o=f="",a=47));continue;case 9:case 10:case 13:case 32:$(),a=0;continue}}else if(60===c){$(),i=1,v=g=l="",t=s=!1,a=9;continue}o+=n[b].charAt(d);}}return $(),Function("h","$",u)};function htm(e){for(var c=".",i=0;i<e.length;i++)c+=e[i].length+","+e[i];return (n[c]||(n[c]=t(e)))(this,arguments)}

var acceptValue = ['input', 'textarea', 'option', 'select'];
var mustUseDomProp = (function (tag, type, attr) {
  return attr === 'value' && acceptValue.includes(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
});

var index = (function (Vue) {
  Vue.mixin({
    beforeCreate: function beforeCreate() {
      var createElement = this.$createElement.bind(this);

      var h = function h(tag, attrs) {
        var arguments$1 = arguments;

        for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          children[_key - 2] = arguments$1[_key];
        }

        return createElement(tag, attrs && getVNodeData(tag, attrs), children);
      };

      this.$$createElement = createElement;
      this.$createElement = htm.bind(h);
    }
  });
});

function getVNodeData(tag, attrs) {
  var data = {};
  var basics = ['slot', 'key', 'ref', 'refInFor', 'class', 'style'];

  var _arr = Object.keys(attrs);

  for (var _i = 0; _i < _arr.length; _i++) {
    var key = _arr[_i];

    if (key.substring(0, 2) === 'on') {
      // OnClick => on: {click}
      data.on = data.on || {};
      var newKey = lowerCaseFirstLetter(key.substring(2));
      data.on[newKey] = attrs[key];
    } else if (key.substring(0, 8) === 'nativeOn') {
      // NativeOnClick => nativeOn: {click}
      data.nativeOn = data.nativeOn || {};

      var _newKey = lowerCaseFirstLetter(key.substring(8));

      data.nativeOn[_newKey] = attrs[key];
    } else if (key.substring(0, 8) === 'domProps') {
      // DomPropsInnerHTML => domProps: {innerHTML}
      data.domProps = data.domProps || {};

      var _newKey2 = lowerCaseFirstLetter(key.substring(8));

      data.domProps[_newKey2] = attrs[key];
    } else if (key.substring(0, 2) === 'v-') {
      data.directives = data.directives || [];
      var name = key.substring(2);
      data.directives.push({
        name: name,
        value: attrs[key]
      });
    } else if (mustUseDomProp(tag, attrs.type, key)) {
      data.domProps = data.domProps || {};
      data.domProps[key] = attrs[key];
    } else if (basics.indexOf(key) > -1) {
      data[key] = attrs[key];
    } else {
      // All others props => {attrs: props}
      data.attrs = data.attrs || {};
      data.attrs[key] = attrs[key];
    }
  }

  return data;
}

function lowerCaseFirstLetter(string) {
  return string.charAt(0).toLowerCase() + string.substring(1);
}

export default index;
